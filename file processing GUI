import tkinter as tk
from tkinter import filedialog, ttk
import os

class TMTlabsGui:
    def __init__(self, master: tk.Tk):
        
        #Initialize the GUI application.
        # Args:master (tk.Tk): The root window of the application.
        
        self.master = master
        self.master.title("TMTlabs Data Translator Project")
        self.frame = tk.Frame(master, bg="#ADD8E6")  # Light blue background
        self.frame.pack(fill="both", expand=True)

        # Create main frames
        self.main_frame = tk.Frame(self.frame, bg="#ADD8E6")
        self.main_frame.pack(fill="both", expand=True)

        self.left_frame = tk.Frame(self.main_frame, bg="#ADD8E6")
        self.left_frame.pack(side="left", fill="both", expand=True, padx=10, pady=10)

        self.right_frame = tk.Frame(self.main_frame, bg="#ADD8E6")
        self.right_frame.pack(side="right", fill="both", expand=True, padx=10, pady=10)

        # Create input folder frame
        self.input_frame = tk.Frame(self.left_frame, bg="#ADD8E6")
        self.input_frame.pack(fill="x", pady=5)

        self.folder_button = tk.Button(self.input_frame, text="Select Input Folder",
                                        command=self.select_folder, bg="#87CEEB", 
                                        fg="#333333", font=("Arial", 12), relief="flat")
        self.folder_button.pack(side="top", padx=5)

        self.folder_label = tk.Label(self.input_frame, text="Input folder:", 
                                     bg="#ADD8E6", fg="#333333", font=("Arial", 12))
        self.folder_label.pack(side="top", padx=5)

        # Create left text box frame
        self.left_text_frame = tk.Frame(self.left_frame, bg="#ADD8E6")
        self.left_text_frame.pack(fill="both", expand=True, pady=5)

        self.text_box = tk.Text(self.left_text_frame, font=("Arial", 12), 
                                bg="#F7F7F7", fg="#333333", relief="flat", 
                                highlightthickness=0, highlightbackground="#ADD8E6")
        self.text_box.pack(side="left", fill="both", expand=True, padx=5)

        self.text_scrollbar = tk.Scrollbar(self.left_text_frame)
        self.text_scrollbar.pack(side="right", fill="y")
        self.text_box.config(yscrollcommand=self.text_scrollbar.set)
        self.text_scrollbar.config(command=self.text_box.yview)

        # Create output folder frame
        self.output_frame = tk.Frame(self.right_frame, bg="#ADD8E6")
        self.output_frame.pack(fill="x", pady=5)

        self.output_button = tk.Button(self.output_frame, text="Select Output Folder",
                                        command=self.select_output_folder, bg="#87CEEB",
                                          fg="#333333", font=("Arial", 12), relief="flat")
        self.output_button.pack(side="top", padx=5)

        self.output_label = tk.Label(self.output_frame, text="Output folder:",
                                     bg="#ADD8E6", fg="#333333", font=("Arial", 12))
        self.output_label.pack(side="top", padx=5)

        # Create right text box frame
        self.right_text_frame = tk.Frame(self.right_frame, bg="#ADD8E6")
        self.right_text_frame.pack(fill="both", expand=True, pady=5)

        self.info_text_box = tk.Text(self.right_text_frame, font=("Arial", 12),
                                      bg="#F7F7F7", fg="#333333", relief="flat", 
                                      highlightthickness=0, highlightbackground="#ADD8E6")
        self.info_text_box.pack(side="left", fill="both", expand=True, padx=5)

        self.info_scrollbar = tk.Scrollbar(self.right_text_frame)
        self.info_scrollbar.pack(side="right", fill="y")
        self.info_text_box.config(yscrollcommand=self.info_scrollbar.set)
        self.info_scrollbar.config(command=self.info_text_box.yview)

        # Create chatbox frame 
        self.tmtbot_frame = tk.Frame(self.frame, bg="#ADD8E6")
        self.tmtbot_frame.pack(fill="both", padx=5,pady=5)

        self.tmtbot_text_frame = tk.Frame(self.tmtbot_frame, bg="#ADD8E6")
        self.tmtbot_text_frame.pack(side="top", fill="both", expand=True, padx=5, pady=5)

        self.chatbox_textbox = tk.Text(self.tmtbot_text_frame, font=("Arial", 12),
                                       bg="#F7F7F7", fg="#333333",
                                       relief="flat", height=5, highlightthickness=0,
                                       highlightbackground="#ADD8E6")
        self.chatbox_textbox.pack(side="left", fill="both", expand=True, padx=5,pady=5)
        self.chatbot_scrollbar = tk.Scrollbar(self.tmtbot_text_frame)
        self.chatbot_scrollbar.pack(side="right", fill="y",padx=5,pady=5)
        self.chatbox_textbox.config(yscrollcommand=self.chatbot_scrollbar.set)
        self.chatbot_scrollbar.config(command=self.chatbox_textbox.yview)

        # create bottom frame for input box and send button
        self.bottom_frame = tk.Frame(self.tmtbot_frame, bg="#ADD8E6")
        self.bottom_frame.pack(fill="both", padx=5,pady=5)
        self.center_frame = tk.Frame(self.bottom_frame, bg="#ADD8E6")
        self.center_frame.pack(side="left", fill="both", expand=True ,padx=5,pady=5)

        self.input_box = tk.Text(self.center_frame, font=("Arial", 12), bg="#F7F7F7", fg="#333333",
                                  relief="flat", height=1, highlightthickness=0, highlightbackground="#ADD8E6")
        self.input_box.pack(fill="both", expand=True)

        self.send_button = tk.Button(self.bottom_frame, text="Send chat message",
                                     command=self.send_button_pressed,
                                      bg="#87CEEB", fg="#333333", font=("Arial",12), relief="flat")
        self.send_button.pack(side="right", fill="both", padx=5, pady=5)
        
        # Path for folders will be set by users
        self.folder_path = ""
        self.output_folder_path = ""

        self.chatbot_responses = {
            "hello": "Hello! How can I assist you today?",
            "how are you": "I'm doing well, thank you for asking!",
            "what is your purpose": "My purpose is to assist you with your file translation needs.",
            "default": "I didn't quite understand that. Could you please rephrase?"
        }

        self.master.bind('<Return>', self.send_button_pressed)

    def list_files(self) -> None:
        # List the files in the selected folder.
        if self.folder_path:
            try:
                self.file_list = os.listdir(self.folder_path)
                self.text_box.delete('1.0', tk.END)
                if self.file_list:
                    for file in self.file_list:
                        self.text_box.insert(tk.END, file + "\n")
                else:
                    self.text_box.insert(tk.END, "Folder is empty")
            except Exception as e:
                self.text_box.delete('1.0', tk.END)
                self.text_box.insert(tk.END, f"Error: {str(e)}")
        else:
            self.text_box.delete('1.0', tk.END)
            self.text_box.insert(tk.END, "Please select a folder first.")

    def select_folder(self) -> None:
        # Select a folder and update the folder label.
        self.folder_path = filedialog.askdirectory(title="Select a folder")
        if self.folder_path:
            self.folder_label.config(text=f"Selected folder: {self.folder_path}")
            self.list_files()

    def select_output_folder(self) -> None:
        # Select an output folder and update the output label.
        self.output_folder_path = filedialog.askdirectory(title="Select an output folder")
        if self.output_folder_path:
            self.output_label.config(text=f"Selected output folder: {self.output_folder_path}")

    def send_button_pressed(self, event=None) -> None:
        # Send a chat message and display the response.
        user_input = self.input_box.get('1.0', tk.END)
        user_input = user_input.strip().lower()

        if user_input:
            if user_input in self.chatbot_responses:
                response = self.chatbot_responses[user_input]
            else:
                response = self.chatbot_responses["default"]
            self.chatbox_textbox.insert(tk.END, "You : " + user_input + "\n")
            self.chatbox_textbox.insert(tk.END, "TMTbot: " + response + "\n"+"\n")
            self.chatbox_textbox.see(tk.END)
            self.input_box.delete('1.0', tk.END)


def main() -> None:
    root = tk.Tk()
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    width = int(screen_width * 0.9)
    height = int(screen_height * 0.8)
    x = (screen_width - width) // 2
    y = 50
    root.geometry(f"{width}x{height}+{x}+{y}")
    root.focus_set()
    app = TMTlabsGui(root)
    root.mainloop()

if __name__ == "__main__":
    main()
